// Copyright 2019 Shift Cryptosecurity AG
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#ifndef _UI_IMAGES_H_
#define _UI_IMAGES_H_

#include <platform/platform_config.h>

#include <stdbool.h>
#include <stdint.h>

#if PRODUCT_BITBOX_BTCONLY == 1

#define IMAGE_BB2_LOGO_W 79
#define IMAGE_BB2_LOGO_H 25

static const uint8_t IMAGE_BB2_LOGO[] = {
    0xfe, 0x0c, 0x30, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xfe, 0x18, 0x60, 0xff, 0x00, 0x00,
    0x00, 0x07, 0x80, 0xf3, 0x06, 0x00, 0xc1, 0x83, 0x00, 0x00, 0x00, 0x10, 0x82, 0x16, 0x0c, 0x67,
    0xe3, 0x06, 0x0f, 0x87, 0x1c, 0x21, 0x08, 0x1c, 0x18, 0xcf, 0xc6, 0x0c, 0x3f, 0x86, 0x30, 0x81,
    0x00, 0x3f, 0xe1, 0x86, 0x0f, 0xf0, 0x63, 0x06, 0xc1, 0x02, 0x00, 0x7f, 0xc3, 0x0c, 0x1f, 0xe1,
    0x83, 0x0f, 0x82, 0x04, 0x01, 0x60, 0xc6, 0x18, 0x30, 0x63, 0x06, 0x0e, 0x04, 0x08, 0x0c, 0xc1,
    0x8c, 0x30, 0x60, 0xc6, 0x0c, 0x1c, 0x08, 0x10, 0x61, 0x83, 0x18, 0x60, 0xc1, 0x8c, 0x18, 0x7c,
    0x10, 0x21, 0x03, 0x06, 0x30, 0xc1, 0x83, 0x0c, 0x60, 0xd8, 0x10, 0x84, 0x07, 0xf8, 0x61, 0xe3,
    0xfc, 0x1f, 0xc3, 0x18, 0x21, 0x08, 0x0f, 0xe0, 0xc1, 0xc7, 0xf0, 0x1f, 0x0e, 0x38, 0x3c, 0x1f,
    0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe4, 0x00,
    0x04, 0x00, 0x00, 0x20, 0x00, 0x0a, 0x08, 0x01, 0x21, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x10,
    0x80, 0x02, 0x57, 0x31, 0x97, 0x01, 0x9c, 0xa2, 0x18, 0xeb, 0xa6, 0x77, 0xa4, 0x94, 0xa9, 0x04,
    0xa5, 0x44, 0x4a, 0x52, 0x52, 0x99, 0x49, 0x09, 0x52, 0xe9, 0x4a, 0x50, 0xf4, 0xa4, 0xa5, 0x32,
    0x92, 0x52, 0xa4, 0x12, 0x94, 0xa1, 0x09, 0x49, 0x4a, 0x79, 0x23, 0x19, 0x48, 0x19, 0x28, 0x81,
    0xce, 0x92, 0x64, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00};

#elif PRODUCT_BITBOX_BASE == 1 || PRODUCT_BITBOXBASE_FACTORYSETUP == 1

#define IMAGE_BB2_LOGO_W 96
#define IMAGE_BB2_LOGO_H 13

static const uint8_t IMAGE_BB2_LOGO[] = {
    0xfe, 0x0c, 0x30, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0x0c, 0x30, 0x7f,
    0x80, 0x00, 0x00, 0x0f, 0xc0, 0x00, 0x00, 0x00, 0xc1, 0x80, 0x30, 0x60, 0xc0, 0x00, 0x00, 0x08,
    0x20, 0x00, 0x00, 0x00, 0xc1, 0x8c, 0xfc, 0x60, 0xc1, 0xf0, 0xe3, 0x88, 0x10, 0x00, 0x00, 0x00,
    0xc1, 0x8c, 0xfc, 0x60, 0xc3, 0xf8, 0x63, 0x08, 0x10, 0x70, 0x78, 0x3c, 0xff, 0x0c, 0x30, 0x7f,
    0x83, 0x18, 0x36, 0x08, 0x10, 0x88, 0x84, 0x42, 0xff, 0x0c, 0x30, 0x7f, 0x86, 0x0c, 0x3e, 0x0f,
    0xe1, 0x04, 0x80, 0x81, 0xc1, 0x8c, 0x30, 0x60, 0xc6, 0x0c, 0x1c, 0x08, 0x10, 0x04, 0x80, 0x81,
    0xc1, 0x8c, 0x30, 0x60, 0xc6, 0x0c, 0x1c, 0x08, 0x08, 0xfc, 0x78, 0xff, 0xc1, 0x8c, 0x30, 0x60,
    0xc6, 0x0c, 0x3e, 0x08, 0x09, 0x04, 0x04, 0x80, 0xc1, 0x8c, 0x30, 0x60, 0xc3, 0x18, 0x36, 0x08,
    0x09, 0x04, 0x04, 0x80, 0xff, 0x0c, 0x3c, 0x7f, 0x83, 0xf8, 0x63, 0x08, 0x11, 0x0c, 0x84, 0x41,
    0xfe, 0x0c, 0x1c, 0x7f, 0x01, 0xf0, 0xe3, 0x8f, 0xe0, 0xf4, 0x78, 0x3e};

#elif (PRODUCT_BITBOX_MULTI == 1) || PRODUCT_BITBOX02_FACTORYSETUP == 1

#define IMAGE_BB2_LOGO_W 128
#define IMAGE_BB2_LOGO_H 55

static const uint8_t IMAGE_BB2_LOGO[] = {
    0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x7f, 0xfc, 0x07, 0xc0, 0x00, 0x7f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x01, 0xf0,
    0xff, 0xfe, 0x07, 0xc0, 0x00, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x0f, 0xfc,
    0xff, 0xff, 0x07, 0xc1, 0x80, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xe0, 0x1e, 0x0e,
    0xff, 0xff, 0x83, 0x83, 0xc0, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x30, 0x18, 0x06,
    0xf0, 0x0f, 0x80, 0x03, 0xc0, 0xf0, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x38, 0x00, 0x03,
    0xf0, 0x07, 0x80, 0x03, 0xc0, 0xf0, 0x07, 0x80, 0x00, 0x00, 0x00, 0x01, 0x80, 0x18, 0x00, 0x03,
    0xf0, 0x07, 0x83, 0x0f, 0xf0, 0xf0, 0x07, 0x80, 0x3c, 0x01, 0x80, 0x61, 0x80, 0x18, 0x00, 0x03,
    0xf0, 0x07, 0x87, 0x9f, 0xf8, 0xf0, 0x07, 0x80, 0xff, 0x03, 0xc0, 0xf3, 0x00, 0x0c, 0x00, 0x03,
    0xf0, 0x0f, 0x07, 0x9f, 0xf8, 0xf0, 0x0f, 0x03, 0xff, 0xc1, 0xe1, 0xe3, 0x00, 0x0c, 0x00, 0x06,
    0xff, 0xff, 0x07, 0x8f, 0xf0, 0xff, 0xff, 0x03, 0xff, 0xc1, 0xf3, 0xe3, 0x00, 0x0c, 0x00, 0x06,
    0xff, 0xfe, 0x07, 0x83, 0xc0, 0xff, 0xfe, 0x07, 0xc3, 0xe0, 0xff, 0xc3, 0x00, 0x0c, 0x00, 0x0e,
    0xff, 0xff, 0x07, 0x83, 0xc0, 0xff, 0xff, 0x07, 0x81, 0xe0, 0x7f, 0x83, 0x00, 0x0c, 0x00, 0x0c,
    0xff, 0xff, 0x87, 0x83, 0xc0, 0xff, 0xff, 0x8f, 0x00, 0xf0, 0x3f, 0x03, 0x00, 0x0c, 0x00, 0x1c,
    0xf0, 0x07, 0x87, 0x83, 0xc0, 0xf0, 0x07, 0x8f, 0x00, 0xf0, 0x3f, 0x03, 0x00, 0x0c, 0x00, 0x38,
    0xf0, 0x03, 0xc7, 0x83, 0xc0, 0xf0, 0x03, 0xcf, 0x00, 0xf0, 0x3f, 0x03, 0x00, 0x0c, 0x00, 0x70,
    0xf0, 0x03, 0xc7, 0x83, 0xc0, 0xf0, 0x03, 0xcf, 0x00, 0xf0, 0x7f, 0x81, 0x80, 0x18, 0x00, 0xe0,
    0xf0, 0x03, 0xc7, 0x83, 0xc0, 0xf0, 0x03, 0xc7, 0x81, 0xe0, 0xff, 0xc1, 0x80, 0x18, 0x01, 0xc0,
    0xf0, 0x07, 0xc7, 0x83, 0xc0, 0xf0, 0x07, 0xc7, 0xc3, 0xe0, 0xf3, 0xc1, 0xc0, 0x38, 0x07, 0x80,
    0xff, 0xff, 0xc7, 0x83, 0xf8, 0xff, 0xff, 0xc3, 0xff, 0xc1, 0xe1, 0xe0, 0xc0, 0x30, 0x0f, 0x00,
    0xff, 0xff, 0x87, 0x83, 0xfc, 0xff, 0xff, 0x83, 0xff, 0xc3, 0xe1, 0xf0, 0x70, 0xe0, 0x1e, 0x00,
    0xff, 0xff, 0x07, 0x81, 0xf8, 0xff, 0xff, 0x00, 0xff, 0x03, 0xc0, 0xf0, 0x3f, 0xc0, 0x3f, 0xff,
    0x7f, 0xfe, 0x03, 0x00, 0xf0, 0x7f, 0xfe, 0x00, 0x3c, 0x01, 0x80, 0x60, 0x1f, 0x80, 0x3f, 0xff,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x0f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x0c, 0x00, 0x00, 0x00, 0xc0,
    0x0f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x00, 0x01, 0xc0,
    0x0c, 0x07, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x00, 0x03, 0xc0,
    0x0c, 0x01, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x00, 0x07, 0xc0,
    0x0c, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x3e, 0x00, 0x00, 0x0e, 0xc0,
    0x0c, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x36, 0x00, 0x00, 0x1c, 0xc0,
    0x0c, 0x00, 0x30, 0x03, 0xc0, 0x30, 0x03, 0x0c, 0x00, 0x1b, 0x80, 0x76, 0x18, 0x01, 0x8c, 0xc0,
    0x0c, 0x00, 0x10, 0x0f, 0xf0, 0x38, 0x07, 0x1e, 0x00, 0x1b, 0x80, 0x76, 0x1c, 0x03, 0x80, 0xc0,
    0x0c, 0x00, 0x18, 0x1c, 0x38, 0x38, 0x07, 0x1e, 0x00, 0x19, 0xc0, 0xe6, 0x1c, 0x03, 0x80, 0xc0,
    0x0c, 0x00, 0x18, 0x30, 0x0c, 0x18, 0x06, 0x0c, 0x00, 0x19, 0xc0, 0xe6, 0x0c, 0x03, 0x00, 0xc0,
    0x0c, 0x00, 0x18, 0x30, 0x0c, 0x1c, 0x0e, 0x00, 0x00, 0x18, 0xc0, 0xc6, 0x0e, 0x07, 0x00, 0xc0,
    0x0c, 0x00, 0x18, 0x60, 0x06, 0x0c, 0x0c, 0x00, 0x00, 0x18, 0xe1, 0xc6, 0x06, 0x06, 0x00, 0xc0,
    0x0c, 0x00, 0x18, 0x60, 0x06, 0x0c, 0x0c, 0x00, 0x00, 0x18, 0x61, 0x86, 0x06, 0x06, 0x00, 0xc0,
    0x0c, 0x00, 0x18, 0x7f, 0xfe, 0x0e, 0x1c, 0x00, 0x00, 0x18, 0x73, 0x86, 0x07, 0x0e, 0x00, 0xc0,
    0x0c, 0x00, 0x10, 0x7f, 0xfe, 0x06, 0x18, 0x00, 0x00, 0x18, 0x73, 0x86, 0x03, 0x0c, 0x00, 0xc0,
    0x0c, 0x00, 0x30, 0x60, 0x00, 0x07, 0x38, 0x00, 0x00, 0x18, 0x33, 0x06, 0x03, 0x9c, 0x00, 0xc0,
    0x0c, 0x00, 0x70, 0x60, 0x00, 0x03, 0x30, 0x00, 0x00, 0x18, 0x3f, 0x06, 0x01, 0x98, 0x00, 0xc0,
    0x0c, 0x00, 0x60, 0x30, 0x00, 0x03, 0x30, 0x00, 0x00, 0x18, 0x1e, 0x06, 0x01, 0x98, 0x00, 0xc0,
    0x0c, 0x01, 0xe0, 0x38, 0x00, 0x03, 0xf0, 0x0c, 0x00, 0x18, 0x1e, 0x06, 0x01, 0xf8, 0x00, 0xc0,
    0x0c, 0x07, 0xc0, 0x1c, 0x1c, 0x01, 0xe0, 0x1e, 0x00, 0x18, 0x1e, 0x06, 0x00, 0xf0, 0x00, 0xc0,
    0x0f, 0xff, 0x00, 0x0f, 0xf8, 0x01, 0xe0, 0x1e, 0x00, 0x18, 0x0c, 0x06, 0x00, 0xf0, 0x00, 0xc0,
    0x0f, 0xf8, 0x00, 0x03, 0xe0, 0x00, 0xc0, 0x0c, 0x00, 0x18, 0x0c, 0x06, 0x00, 0x60, 0x00, 0xc0,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00};

#else

#error "Invalid product"

#endif

#define IMAGE_ROTATE_W 22
#define IMAGE_ROTATE_H 14

static const uint8_t IMAGE_ROTATE[] = {0x00, 0x60, 0x00, 0x06, 0x00, 0x00, 0x20, 0x04, 0x01, 0x00,
                                       0x38, 0x04, 0x01, 0xf0, 0x20, 0x0f, 0xe0, 0x80, 0x7f, 0xc2,
                                       0x00, 0x10, 0x08, 0x00, 0x40, 0x10, 0x02, 0x00, 0x40, 0x08,
                                       0x00, 0x80, 0x40, 0x01, 0x86, 0x00, 0x01, 0xe0, 0x00};

static const uint8_t IMAGE_ROTATE_REVERSE[] = {
    0x00, 0x78, 0x00, 0x06, 0x18, 0x00, 0x20, 0x10, 0x01, 0x00, 0x20, 0x04, 0x00,
    0x80, 0x20, 0x01, 0x00, 0x80, 0x04, 0x3f, 0xe0, 0x10, 0x7f, 0x00, 0x40, 0xf8,
    0x02, 0x01, 0xc0, 0x08, 0x02, 0x00, 0x40, 0x00, 0x06, 0x00, 0x00, 0x60, 0x00};

#define IMAGE_DEFAULT_ARROW_HEIGHT 6
#define IMAGE_DEFAULT_CHECKMARK_HEIGHT 7
#define IMAGE_DEFAULT_CROSS_HEIGHT 6
#define IMAGE_DEFAULT_LOCK_RADIUS 6

typedef enum {
    ARROW_RIGHT,
    ARROW_LEFT,
    ARROW_UP,
    ARROW_DOWN,
} arrow_orientation_t;

void image_arrow(int x, int y, int height, arrow_orientation_t orientation);
void image_arrow_hollow(int x, int y, int height, arrow_orientation_t orientation);
void image_checkmark(int x, int y, int h);
void image_cross(int x, int y, int h);
void image_lock(int x, int y, int r);
void image_unlock(int x, int y, int r);
void image_sdcard(bool mirror);

#endif

#define IMAGE_BB2_LOCK_W 128
#define IMAGE_BB2_LOCK_H 55

static const uint8_t IMAGE_BB2_LOCK[] = {
    0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x7f, 0xfc, 0x07, 0xc0, 0x00, 0x7f, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x80, 0x01, 0xf0,	
    0xff, 0xfe, 0x07, 0xc0, 0x00, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x0f, 0xfc,	
    0xff, 0xff, 0x07, 0xc1, 0x80, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xe0, 0x1e, 0x0e,	
    0xff, 0xff, 0x83, 0x83, 0xc0, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x30, 0x18, 0x06,	
    0xf0, 0x0f, 0x80, 0x03, 0xc0, 0xf0, 0x0f, 0x80, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x38, 0x00, 0x03,	
    0xf0, 0x07, 0x80, 0x03, 0xc0, 0xf0, 0x07, 0x80, 0x00, 0x00, 0x00, 0x01, 0x80, 0x18, 0x00, 0x03,	
    0xf0, 0x07, 0x83, 0x0f, 0xf0, 0xf0, 0x07, 0x80, 0x3c, 0x01, 0x80, 0x61, 0x80, 0x18, 0x00, 0x03,	
    0xf0, 0x07, 0x87, 0x9f, 0xf8, 0xf0, 0x07, 0x80, 0xff, 0x03, 0xc0, 0xf3, 0x00, 0x0c, 0x00, 0x03,	
    0xf0, 0x0f, 0x07, 0x9f, 0xf8, 0xf0, 0x0f, 0x03, 0xff, 0xc1, 0xe1, 0xe3, 0x00, 0x0c, 0x00, 0x06,	
    0xff, 0xff, 0x07, 0x8f, 0xf0, 0xff, 0xff, 0x03, 0xff, 0xc1, 0xf3, 0xe3, 0x00, 0x0c, 0x00, 0x06,	
    0xff, 0xfe, 0x07, 0x83, 0xc0, 0xff, 0xfe, 0x07, 0xc3, 0xe0, 0xff, 0xc3, 0x00, 0x0c, 0x00, 0x0e,	
    0xff, 0xff, 0x07, 0x83, 0xc0, 0xff, 0xff, 0x07, 0x81, 0xe0, 0x7f, 0x83, 0x00, 0x0c, 0x00, 0x0c,	
    0xff, 0xff, 0x87, 0x83, 0xc0, 0xff, 0xff, 0x8f, 0x00, 0xf0, 0x3f, 0x03, 0x00, 0x0c, 0x00, 0x1c,	
    0xf0, 0x07, 0x87, 0x83, 0xc0, 0xf0, 0x07, 0x8f, 0x00, 0xf0, 0x3f, 0x03, 0x00, 0x0c, 0x00, 0x38,	
    0xf0, 0x03, 0xc7, 0x83, 0xc0, 0xf0, 0x03, 0xcf, 0x00, 0xf0, 0x3f, 0x03, 0x00, 0x0c, 0x00, 0x70,	
    0xf0, 0x03, 0xc7, 0x83, 0xc0, 0xf0, 0x03, 0xcf, 0x00, 0xf0, 0x7f, 0x81, 0x80, 0x18, 0x00, 0xe0,	
    0xf0, 0x03, 0xc7, 0x83, 0xc0, 0xf0, 0x03, 0xc7, 0x81, 0xe0, 0xff, 0xc1, 0x80, 0x18, 0x01, 0xc0,	
    0xf0, 0x07, 0xc7, 0x83, 0xc0, 0xf0, 0x07, 0xc7, 0xc3, 0xe0, 0xf3, 0xc1, 0xc0, 0x38, 0x07, 0x80,	
    0xff, 0xff, 0xc7, 0x83, 0xf8, 0xff, 0xff, 0xc3, 0xff, 0xc1, 0xe1, 0xe0, 0xc0, 0x30, 0x0f, 0x00,	
    0xff, 0xff, 0x87, 0x83, 0xfc, 0xff, 0xff, 0x83, 0xff, 0xc3, 0xe1, 0xf0, 0x70, 0xe0, 0x1e, 0x00,	
    0xff, 0xff, 0x07, 0x81, 0xf8, 0xff, 0xff, 0x00, 0xff, 0x03, 0xc0, 0xf0, 0x3f, 0xc0, 0x3f, 0xff,	
    0x7f, 0xfe, 0x03, 0x00, 0xf0, 0x7f, 0xfe, 0x00, 0x3c, 0x01, 0x80, 0x60, 0x1f, 0x80, 0x3f, 0xff,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe1, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xc0, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x80, 0x7c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,	
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

#define IMAGE_SCREENSAVER_W 45
#define IMAGE_SCREENSAVER_H 20
static const uint8_t IMAGE_SCREENSAVER[] = {
    0x0f, 0xff, 0xf8, 0x0f, 0xff, 0x80, 0x7f, 0xff, 0xc0, 0xff, 0xff, 0x00, 0x3f, 0xfe, 0x07, 0x83,
    0xfc, 0x3c, 0x1f, 0xf8, 0x7b, 0xc1, 0xf1, 0xe0, 0x7b, 0xc7, 0x9e, 0x07, 0x8f, 0x03, 0xde, 0x7d,
    0xf0, 0x3c, 0xf8, 0x3e, 0x7b, 0xcf, 0x83, 0xe7, 0x83, 0xe3, 0xfc, 0x78, 0x3e, 0x3c, 0x7e, 0x1f,
    0xc3, 0xc7, 0xe1, 0xff, 0xe0, 0x7c, 0x3f, 0xfe, 0x1f, 0xf8, 0x03, 0xc1, 0xff, 0x80, 0x00, 0x00,
    0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
    0xff, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc3,
    0xff, 0xff, 0xff, 0xff, 0xfe, 0x07, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x7f, 0xff, 0xfe, 0x00,
    0x00};
